{"version":3,"sources":["store/csrf.js","store/session.js","components/LoginFormPage/index.js","components/SignUpFormPage/index.js","components/Navigation/ProfileButton.js","components/Navigation/index.js","App.js","store/index.js","index.js"],"names":["fetch","url","a","options","method","headers","toUpperCase","Cookies","get","window","res","contentType","includes","json","data","status","SET_USER","REMOVE_USER","setUser","user","type","payload","sessionReducer","newState","state","action","Object","assign","LoginFormPage","dispatch","useDispatch","sessionUser","useSelector","session","useState","errors","setErrors","credential","setCredential","password","setPassword","to","className","onSubmit","e","preventDefault","body","JSON","stringify","response","catch","map","error","idx","name","id","placeholder","value","onChange","target","SignupFormPage","username","setUsername","email","setEmail","confirmPassword","setConfirmPassword","ProfileButton","showMenu","setShowMenu","useEffect","closeMenu","document","addEventListener","removeEventListener","onClick","Navigation","sessionLinks","isLoaded","exact","App","enhancer","setIsLoaded","then","path","rootReducer","combineReducers","applyMiddleware","thunk","store","preloadedState","createStore","configureStore","Root","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.811fd634.chunk.js","sourcesContent":["// frontend/src/store/csrf.js\nimport Cookies from \"js-cookie\";\n\nexport async function fetch(url, options = {}) {\n  // set options.method to 'GET' if there is no method\n  options.method = options.method || \"GET\";\n  // set options.headers to an empty object if there is no headers\n  options.headers = options.headers || {};\n\n  // if the options.method is not 'GET', then set the \"Content-Type\" header to\n  // \"application/json\", and set the \"CSRF-TOKEN\" header to the value of the\n  // \"XSRF-TOKEN\" cookie\n  if (options.method.toUpperCase() !== \"GET\") {\n    options.headers[\"Content-Type\"] =\n      options.headers[\"Content-Type\"] || \"application/json\";\n    options.headers[\"XSRF-Token\"] = Cookies.get(\"XSRF-TOKEN\");\n  }\n  // call the default window's fetch with the url and the options passed in\n  const res = await window.fetch(url, options);\n\n  // if the response's body is JSON, then parse the JSON body and set it to a\n  // key of `data` on the response\n  const contentType = res.headers.get(\"content-type\");\n  if (contentType && contentType.includes(\"application/json\")) {\n    const data = await res.json();\n    res.data = data;\n  }\n\n  // if the response status code is 400 or above, then throw an error with the\n  // error being the response\n  if (res.status >= 400) throw res;\n\n  // if the response status code is under 400, then return the response to the\n  // next promise chain\n  return res;\n}\n\n// call this to get the \"XSRF-TOKEN\" cookie, should only be used in development\nexport function restoreCSRF() {\n  return fetch(\"/api/csrf/restore\");\n}\n","import { fetch } from \"./csrf\";\n\nconst SET_USER = \"session/setUser\";\nconst REMOVE_USER = \"session/removeUser\";\n\nconst setUser = (user) => {\n  return {\n    type: SET_USER,\n    payload: user,\n  };\n};\n\nconst removeUser = () => {\n  return {\n    type: REMOVE_USER,\n  };\n};\n\nexport const logout = () => async (dispatch) => {\n  const res = await fetch(\"/api/session\", {\n    method: \"DELETE\",\n  });\n  dispatch(removeUser());\n  return res;\n};\n\nexport const restoreUser = () => async (dispatch) => {\n  const res = await fetch(\"/api/session\");\n  dispatch(setUser(res.data.user));\n  return res;\n};\n\nexport const loginUser = (user) => async (dispatch) => {\n  const { credential, password } = user;\n  const response = await fetch(\"/api/session\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      credential,\n      password,\n    }),\n  });\n  dispatch(setUser(response.data.user));\n  return response;\n};\n\nexport const signup = (user) => async (dispatch) => {\n  const { username, password, email } = user;\n\n  const res = await fetch(\"/api/users\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      username,\n      email,\n      password,\n    }),\n  });\n  dispatch(setUser(res.data.user));\n  return res;\n};\n\nconst sessionReducer = (state = { user: null }, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_USER:\n      newState = Object.assign({}, state);\n      newState.user = action.payload;\n      return newState;\n    case REMOVE_USER:\n      newState = Object.assign({}, state);\n      newState.user = null;\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default sessionReducer;\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport \"./LoginForm.css\";\n\nimport * as sessionActions from \"../../store/session\";\n\nconst LoginFormPage = () => {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const [errors, setErrors] = useState([]);\n  const [credential, setCredential] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  if (sessionUser) return <Redirect to=\"/\" />;\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.loginUser({ credential, password })).catch(\n      (res) => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      }\n    );\n  };\n\n  return (\n    <div className=\"main-container\">\n      <form className=\"login-form\" onSubmit={handleFormSubmit}>\n        <div className=\"login-container\">\n          <ul className=\"loginErrors-ul\">\n            {errors.map((error, idx) => (\n              <div className=\"loginErrors-div\" key={idx}>\n                {error}\n              </div>\n            ))}\n          </ul>\n          <div className=\"usernamefields\">\n            <label>Username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              placeholder=\"i.e. John123\"\n              value={credential}\n              onChange={(e) => setCredential(e.target.value)}\n            ></input>\n          </div>\n          <div className=\"passwordfields\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></input>\n          </div>\n          <button className=\"login-button\" type=\"submit\">\n            Log In\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginFormPage;\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as sessionActions from \"../../store/session\";\n\nimport \"./SignupForm.css\";\n\nconst SignupFormPage = () => {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const [errors, setErrors] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  if (sessionUser) return <Redirect to=\"/\" />;\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    if (password === confirmPassword) {\n      setErrors([]);\n      return dispatch(\n        sessionActions.signup({ email, username, password })\n      ).catch((res) => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      });\n    }\n    return setErrors([\"Password and Confirm Password must match\"]);\n  };\n\n  return (\n    <div className=\"main-container\">\n      <form className=\"signup-form\" onSubmit={handleFormSubmit}>\n        <div className=\"signup-container\">\n          <ul className=\"signupErrors-ul\">\n            {errors.map((error, idx) => (\n              <div className=\"signupErrors-div\" key={idx}>\n                {error}\n              </div>\n            ))}\n          </ul>\n          <div className=\"usernamefields\">\n            <label>Username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              placeholder=\"i.e. John123\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            ></input>\n          </div>\n          <div className=\"emailfields\">\n            <label>Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              value={email}\n              placeholder=\"example@example.com\"\n              onChange={(e) => setEmail(e.target.value)}\n            ></input>\n          </div>\n          <div className=\"passwordfields\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></input>\n          </div>\n          <div className=\"confirm-passwordfields\">\n            <label>Confirm Password</label>\n            <input\n              type=\"password\"\n              name=\"confirm-password\"\n              id=\"confirm-password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></input>\n          </div>\n          <button className=\"signup-button\" type=\"submit\">\n            Signup\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default SignupFormPage;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as sessionActions from \"../../store/session\";\n\nfunction ProfileButton({ user }) {\n  const dispatch = useDispatch();\n  const [showMenu, setShowMenu] = useState(false);\n\n  const openMenu = () => {\n    if (showMenu) return;\n    setShowMenu(true);\n  };\n\n  useEffect(() => {\n    if (!showMenu) return;\n\n    const closeMenu = () => {\n      setShowMenu(false);\n    };\n\n    document.addEventListener(\"click\", closeMenu);\n\n    return () => document.removeEventListener(\"click\", closeMenu);\n  }, [showMenu]);\n\n  const logout = (e) => {\n    e.preventDefault();\n    dispatch(sessionActions.logout());\n  };\n\n  return (\n    <>\n      <button onClick={openMenu}>\n        <i className=\"fas fa-user-circle\" />\n      </button>\n      {showMenu && (\n        <ul className=\"profile-dropdown\">\n          <li>{user.username}</li>\n          <li>{user.email}</li>\n          <li>\n            <button onClick={logout}>Log Out</button>\n          </li>\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default ProfileButton;\n","import { useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport ProfileButton from \"./ProfileButton\";\nimport \"./Navigation.css\";\n\nconst Navigation = ({ isLoaded }) => {\n  const sessionUser = useSelector((state) => state.session.user);\n\n  let sessionLinks;\n  if (sessionUser) {\n    sessionLinks = <ProfileButton user={sessionUser} />;\n  } else {\n    sessionLinks = (\n      <>\n        <NavLink to=\"/login\">Log In</NavLink>\n        <NavLink to=\"/signup\">Sign Up</NavLink>\n      </>\n    );\n  }\n\n  return (\n    <ul>\n      <li>\n        <NavLink exact to=\"/\">\n          Home\n        </NavLink>\n        {isLoaded && sessionLinks}\n      </li>\n    </ul>\n  );\n};\n\nexport default Navigation;\n","import { Route, Switch } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport LoginFormPage from \"./components/LoginFormPage\";\nimport * as sessionActions from \"./store/session\";\nimport SignupFormPage from \"./components/SignUpFormPage\";\nimport Navigation from \"./components/Navigation/index\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n  return (\n    <>\n      <Navigation isLoaded={isLoaded} />\n      {isLoaded && (\n        <Switch>\n          <Route path=\"/login\">\n            <LoginFormPage />\n          </Route>\n          <Route path=\"/signup\">\n            <SignupFormPage />\n          </Route>\n        </Switch>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport sessionReducer from \"./session\";\n\nconst rootReducer = combineReducers({\n  session: sessionReducer,\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === \"production\") {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require(\"redux-logger\").default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n","import React from \"react\";\n\nimport \"./index.css\";\n\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nimport configureStore from \"./store\";\nimport { restoreCSRF, fetch } from \"./store/csrf\";\nimport * as sessionActions from \"./store/session\";\n\nconst store = configureStore();\n\nif (process.env.NODE_ENV !== \"production\") {\n  restoreCSRF();\n\n  window.csrfFetch = fetch;\n  window.store = store;\n  window.sessionActions = sessionActions;\n}\n\nconst Root = () => {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}